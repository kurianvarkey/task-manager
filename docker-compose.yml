services: 
  #Nginx Service
  nginx:
    container_name: nginx
    image: nginx:alpine    
    restart: unless-stopped
    tty: true
    ports:
      - 8000:80
    volumes:
      - ./:/var/www      
      - .docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - .docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      kvp-network:

  #PHP Service
  php-task-manager:
    image: php-task-manager
    container_name: php-task-manager
    build:
      args:
        USER: www
        UID: 1000
        API_PORT: 9000
      context: .
      dockerfile: .docker/php/Dockerfile    
    restart: unless-stopped
    tty: true   
    ports:
      - 9000:9000 
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - .docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini
      - .docker/php/startup.sh:/usr/local/etc/php/startup.sh
    networks:
      kvp-network:

  #mysql Service
  mysqldb:
    container_name: mysqldb
    image: mysql:latest   
    #profiles: ['no-start']     
    restart: always
    tty: true
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: task_manager
      MYSQL_USER: task_manager_user
      MYSQL_PASSWORD: task_manager_123456      
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 3s
      timeout: 5s
      retries: 5
    volumes:
      - mysqldata:/var/lib/mysql
      #- .docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      kvp-network:

#Docker Networks
networks:
  kvp-network:
    driver: bridge

#Volumes
volumes:
  mysqldata:
    driver: local